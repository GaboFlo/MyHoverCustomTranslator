#!/bin/bash

# Script de release pour MyHover Custom Translator
# Usage: ./scripts/release.sh <version>
# Exemple: ./scripts/release.sh 1.2.3

set -e

if [ $# -eq 0 ]; then
    echo "‚ùå Erreur: Veuillez sp√©cifier une version"
    echo "Usage: $0 <version>"
    echo "Exemple: $0 1.2.3"
    exit 1
fi

VERSION=$1

# Validation du format de version (semver)
if [[ ! $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
    echo "‚ùå Erreur: Format de version invalide. Utilisez le format semver (ex: 1.2.3)"
    exit 1
fi

echo "üöÄ Cr√©ation de la release v$VERSION..."

# V√©rifier que le working directory est propre
if [ -n "$(git status --porcelain)" ]; then
    echo "‚ùå Erreur: Il y a des modifications non commit√©es"
    echo "Veuillez commiter ou stasher vos modifications avant de cr√©er une release"
    exit 1
fi

# V√©rifier que nous sommes sur la branche main
CURRENT_BRANCH=$(git branch --show-current)
if [ "$CURRENT_BRANCH" != "main" ]; then
    echo "‚ùå Erreur: Vous devez √™tre sur la branche main pour cr√©er une release"
    echo "Branche actuelle: $CURRENT_BRANCH"
    exit 1
fi

# Mettre √† jour la version dans le manifest
echo "üìù Mise √† jour de la version dans manifest.json..."
if [[ "$OSTYPE" == "msys" || "$OSTYPE" == "win32" ]]; then
    # Windows
    powershell -Command "(Get-Content manifest.json) -replace '\"version\": \"[^\"]*\"', '\"version\": \"$VERSION\"' | Set-Content manifest.json"
else
    # Linux/macOS
    sed -i "s/\"version\": \"[^\"]*\"/\"version\": \"$VERSION\"/" manifest.json
fi

# Commiter la mise √† jour de version
git add manifest.json
git commit -m "üîñ Bump version to $VERSION"

# Cr√©er le tag
echo "üè∑Ô∏è  Cr√©ation du tag v$VERSION..."
git tag -a "v$VERSION" -m "Release v$VERSION"

# Pousser les changements et le tag
echo "üì§ Push des changements et du tag..."
git push origin main
git push origin "v$VERSION"

echo "‚úÖ Release v$VERSION cr√©√©e avec succ√®s !"
echo ""
echo "üìã Prochaines √©tapes :"
echo "1. V√©rifiez que le workflow GitHub Actions s'est ex√©cut√© correctement"
echo "2. T√©l√©chargez le ZIP depuis la release GitHub"
echo "3. Mettez √† jour l'extension sur le Chrome Web Store"
echo ""
echo "üîó Liens utiles :"
echo "- GitHub Actions: https://github.com/$(git config --get remote.origin.url | sed 's/.*github.com[:/]\([^/]*\/[^/]*\).*/\1/')/actions"
echo "- Releases: https://github.com/$(git config --get remote.origin.url | sed 's/.*github.com[:/]\([^/]*\/[^/]*\).*/\1/')/releases"
