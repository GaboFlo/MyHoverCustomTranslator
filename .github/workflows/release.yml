name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Extract version from tag
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Update manifest version
        run: |
          # Extraire la version du tag (ex: v1.2.3 -> 1.2.3)
          VERSION=${GITHUB_REF#refs/tags/}
          VERSION=${VERSION#v}

          # Mettre à jour le manifest.json
          if [[ "$OSTYPE" == "msys" || "$OSTYPE" == "win32" ]]; then
            # Windows
            powershell -Command "(Get-Content manifest.json) -replace '\"version\": \"[^\"]*\"', '\"version\": \"$VERSION\"' | Set-Content manifest.json"
          else
            # Linux/macOS
            sed -i "s/\"version\": \"[^\"]*\"/\"version\": \"$VERSION\"/" manifest.json
          fi

          echo "✅ Version mise à jour dans manifest.json: $VERSION"

      - name: Run tests
        run: |
          npm run build
          npm run lint
          npx tsc --noEmit

      - name: Build extension
        run: npm run build

      - name: Create Chrome Store ZIP
        run: |
          # Créer le ZIP pour Chrome Store
          cd dist
          zip -r "../myhover-translator-${{ steps.version.outputs.version }}.zip" . -x "*.DS_Store" "*/.*"
          cd ..

          echo "✅ ZIP créé: myhover-translator-${{ steps.version.outputs.version }}.zip"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/**/*
            myhover-translator-${{ steps.version.outputs.version }}.zip
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload extension package
        uses: actions/upload-artifact@v4
        with:
          name: extension-release-${{ github.ref_name }}
          path: |
            dist/
            myhover-translator-${{ steps.version.outputs.version }}.zip
          retention-days: 30
